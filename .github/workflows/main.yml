name: Build and Deploy

on:
  push:
    branches: [ main ]
    paths:
      - 'app/main.go'
env:
  IMAGE_NAME: ${{ secrets.DOCKERHUB_USERNAME1 }}/hello-app

jobs:
  build-and-push:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Login to DockerHub
        uses: docker/login-action@v3
        with:
          registry: docker.io
          username: ${{ secrets.DOCKERHUB_USERNAME  }}  
          password: ${{ secrets.DOCKERHUB_TOKEN }} 

      - name: Build and push
        uses: docker/build-push-action@v5
        with:
          context: .
          push: true
          tags: |
            ${{ env.IMAGE_NAME }}:${{ github.sha }}
            ${{ env.IMAGE_NAME }}:latest

  deploy-to-gke:
    needs: build-and-push
    runs-on: ubuntu-latest
    steps:
      - name: Setup gcloud
        uses: google-github-actions/setup-gcloud@v2
        with:
          project_id: ${{ secrets.GCP_PROJECT_ID }}
          credentials_json: ${{ secrets.GCP_SA_KEY }}
          export_default_credentials: true

      - name: Checkout code
        uses: actions/checkout@v4

      - name: Authenticate with gcloud
        uses: google-github-actions/auth@v1
        with:
          credentials_json: ${{ secrets.GCP_SA_KEY }}

      - name: Set up Cloud SDK
        uses: google-github-actions/setup-gcloud@v2
        with:
          project_id: ${{ secrets.GCP_PROJECT_ID }}
          install_components: kubectl

      - name: Configure kubectl
        run: |
          gcloud container clusters get-credentials hello-cluster \
            --location ${{ secrets.GCP_ZONE }} \
            --project ${{ secrets.GCP_PROJECT_ID }}

      - name: Update deployment
        run: |
          kubectl set image deployment/hello-server hello-app=${{ env.IMAGE_NAME }}:${{ github.sha }}

      
      - name: Get error logs
        if: failure()
        id: get_error_logs
        uses: actions/github-script@v6
        with:
          script: |
            const { data: logs } = await github.rest.actions.downloadJobLogsForWorkflowRun({
              owner: context.repo.owner,
              repo: context.repo.repo,
              job_id: context.job,
              run_id: context.runId,
            });
            return logs;

  notify-on-failure:
    needs: [build-and-push, deploy-to-gke]
    if: failure()
    runs-on: ubuntu-latest
    steps:
      - name: Notify Telegram
        uses: appleboy/telegram-action@master
        with:
          to: ${{ secrets.TELEGRAM_CHAT_ID }}
          token: ${{ secrets.TELEGRAM_BOT_TOKEN }}
          message: |
            ðŸš¨ Pipeline failed! Check the logs for details.

            **Job Details:**
            - Workflow: ${{ github.workflow }}
            - Job: ${{ github.job }}
            - Run ID: ${{ github.run_id }}

            
